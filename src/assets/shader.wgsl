struct VertexInput{@location(0)position:vec3<f32>,@location(1)tex_coords:vec2<f32>,@location(2)color:u32};struct VertexOutput{@builtin(position)clip_position:vec4<f32>,@location(0)tex_coords:vec2<f32>,@location(1)color:vec4<f32>};@vertex fn vs_main(input:VertexInput)->VertexOutput{var output:VertexOutput;output.tex_coords=input.tex_coords;output.clip_position=vec4<f32>(input.position,1.0);output.color=vec4<f32>(f32((input.color>>24u)&0xFFu),f32((input.color>>16u)&0xFFu),f32((input.color>>8u)&0xFFu),f32((input.color&0xFFu)))/255.0;return output;}@group(0)@binding(0)var t_diffuse:texture_2d<f32>;@group(0)@binding(1)var s_diffuse:sampler;@fragment fn fs_main(input:VertexOutput)->@location(0)vec4<f32>{return input.color*textureSample(t_diffuse,s_diffuse,input.tex_coords);}